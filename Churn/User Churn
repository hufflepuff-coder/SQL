--Churn for each segment

--1) Create months table:
WITH months AS (
SELECT
'2017-01-01' AS first_day,
'2017-01-31' AS last_day
UNION
SELECT
'2017-02-01' AS first_day,
'2017-02-28' AS last_day
UNION
SELECT
'2017-03-01' AS first_day,
'2017-03-31' AS last_day
  ),

--2) Create cross join table of months and subscriptions:
cross_join AS (
SELECT *
FROM subscriptions
CROSS JOIN months
  ),
  
--3) Create status table for active and canceled users:
status AS (
SELECT id, first_day AS month,
CASE 
  WHEN (subscription_start < first_day) AND (subscription_end > first_day       OR subscription_end IS NULL) AND (segment = 87) THEN 1
  ELSE 0
  END AS is_active_87,
CASE 
  WHEN (subscription_start < first_day) AND (subscription_end > first_day       OR subscription_end IS NULL) AND (segment = 30) THEN 1
  ELSE 0
  END AS is_active_30,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) 
  AND (segment = 87) THEN 1
  ELSE 0
  END AS is_canceled_87,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) 
  AND (segment = 30) THEN 1
  ELSE 0
  END AS is_canceled_30
FROM cross_join
  ),
  
--4) Create status aggregate table: 
status_aggregate AS (
SELECT month, SUM(is_active_87) AS sum_active_87, SUM(is_active_30) AS sum_active_30, SUM(is_canceled_87) AS sum_canceled_87, SUM(is_canceled_30) AS sum_canceled_30 
FROM status
GROUP BY month
) 

--5) Create churn table:
SELECT month,
1.0 * sum_canceled_87/sum_active_87 AS churn_87, 
1.0 * sum_canceled_30/sum_active_30 AS churn_30
FROM status_aggregate;
